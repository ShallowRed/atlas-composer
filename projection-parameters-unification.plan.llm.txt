# Projection Parameters Unification - Implementation Plan

## Objective
Implement Phase 1 critical fixes for projection parameters system: unify parameter interfaces, consolidate constraint definitions, standardize component props, and fix naming inconsistencies.

## Affected Domains
- [ ] Projection System (docs/projections.llm.txt) - Parameter interface unification and constraint consolidation
- [ ] Vue Architecture (docs/vue-architecture.llm.txt) - Component interface standardization
- [ ] Services (docs/services.llm.txt) - Parameter service updates

## Context
- Architecture: docs/architecture.llm.txt
- Current analysis completed showing fragmented type system and dual constraint systems
- Focus on high-impact, low-risk improvements first

## Changes

### Phase 1.1: Unify Parameter Interfaces
- [x] File: src/types/projection-parameters.ts
  - Action: Consolidate 4+ parameter interfaces into single unified interface
  - Why: Eliminate conversion overhead and type confusion
  - Remove: BaseProjectionParameters, ExtendedProjectionParameters, ProjectionParametersWithMetadata
  - Create: Single ProjectionParameters interface with optional metadata fields
  - Added: Backward compatibility aliases for migration

### Phase 1.2: Update Parameter Services
- [x] File: src/services/parameters/projection-parameter-manager.ts
  - Action: Update to use unified ProjectionParameters interface
  - Why: Consistent type usage across service layer
  - Replace: All BaseProjectionParameters references with ProjectionParameters

- [x] File: src/stores/parameters.ts
  - Action: Update parameter store to use unified interface
  - Why: Type consistency across store layer
  - Replace: All parameter type references with unified interface

### Phase 1.3: Standardize Component Interfaces
- [ ] File: src/components/ui/projections/ProjectionParamsControls.vue  
  - Action: Use unified parameter interface and centralized ranges
  - Why: Eliminate hard-coded ranges and type inconsistencies
  - Replace: RANGES object with constraint-based ranges

- [x] File: src/components/ui/parameters/TerritoryParameterControls.vue
  - Action: Align with unified parameter interface
  - Why: Consistent parameter handling across components  
  - Replace: Template condition checking with computed properties

### Phase 1.4: Fix Naming Inconsistencies
- [ ] File: src/stores/config.ts
  - Action: Standardize parameter naming (customRotateLongitude â†’ rotateLongitude)
  - Why: Consistent naming reduces confusion
  - Update: All parameter field names to match unified interface

- [ ] File: src/stores/parameters.ts  
  - Action: Update to use unified parameter interface
  - Why: Type consistency across store layer
  - Replace: Multiple parameter type references with unified interface

## Documentation Updates
- [ ] docs/projections.llm.txt - Update parameter interface documentation
- [ ] docs/vue-architecture.llm.txt - Update component interface descriptions  
- [ ] docs/services.llm.txt - Update parameter service descriptions

## Verification
- [ ] Code compiles without TypeScript errors
- [ ] All parameter controls render correctly
- [ ] Parameter validation functions work with unified interface
- [ ] No regression in parameter functionality
- [ ] All .llm.txt documentation updated
- [ ] No temporal language in .llm.txt files

## Status
Status: PLANNED
Last Updated: 2025-10-14